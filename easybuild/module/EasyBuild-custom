#%Module
proc ModulesHelp { } {
    puts stderr { EasyBuild is a software build and installation framework
written in Python that allows you to install software in a structured,
repeatable and robust way. - Homepage: http://hpcugent.github.com/easybuild/
    }
}

module-whatis {Description: EasyBuild is a software build and installation framework
written in Python that allows you to install software in a structured,
repeatable and robust way. - Homepage: http://hpcugent.github.com/easybuild/}


#
# Conflicts
#
conflict EasyBuild-custom
################
# COMMON SETUP #
################
# Local variables
set ebmodule               [glob -types hidden -nocomplain -dir "/users/apps/EasyBuild/latest/modules/all/EasyBuild" .*]
#set ebmodule               [regsub {\.lua} $ebmodule ""]
set ebmodule               [file tail $ebmodule]
set ebmodule               [concat "EasyBuild/" $ebmodule]
set ebmodule               [regsub {\s} $ebmodule ""]
set eb_config_dir          /users/apps/production/easybuild
#
# EB_CUSTOM_REPOSITORY
# the following variables should depend on it
#
# XDG_CONFIG_HOME
# EASYBUILD_ROBOT_PATHS
# EASYBUILD_INCLUDE_EASYBLOCKS
# EASYBUILD_EXTERNAL_MODULES_METADATA (if on cray)
#
if { ! [ info exists ::env(EB_CUSTOM_REPOSITORY) ] } {
    setenv EB_CUSTOM_REPOSITORY $eb_config_dir
}
setenv XDG_CONFIG_DIRS                          $::env(EB_CUSTOM_REPOSITORY)
setenv EASYBUILD_ROBOT_PATHS                    $::env(EB_CUSTOM_REPOSITORY)/easyconfigs/:
setenv EASYBUILD_INCLUDE_EASYBLOCKS             $::env(EB_CUSTOM_REPOSITORY)/easyblocks/*.py
setenv EASYBUILD_EXTERNAL_MODULES_METADATA      $::env(EB_CUSTOM_REPOSITORY)/cray_external_modules_metadata.cfg
#
# Checking if we have the command modulecmd
# If so, then module is a c version
# if not then module is a tcl version
# 
# Not needed since we are using Lmod
#
set status [catch {exec which modulecmd} [list result]]
if { $status == 0 } {
    setenv EASYBUILD_MODULES_TOOL               EnvironmentModulesC
} else {
    setenv EASYBUILD_MODULES_TOOL               EnvironmentModulesTcl
    if { [ file readable "/usr/share/Modules/tcl" ] } {
        prepend-path PATH                           /usr/share/Modules/tcl
    }
}
#########################
# SYSTEM SPECIFIC SETUP #
#########################
# current system name
set system [regsub {[0-9]+} $::env(HOSTNAME) ""]
# system specific setup
#setenv EASYBUILD_MODULE_NAMING_SCHEME       HierarchicalMNS
setenv EASYBUILD_MODULE_NAMING_SCHEME       EasyBuildMNS
setenv EASYBUILD_RECURSIVE_MODULE_UNLOAD    1
#setenv EASYBUILD_RECURSIVE_MODULE_UNLOAD    0

#
# EASYBUILD_PREFIX
# the following variables should depend on it
#
# EASYBUILD_INSTALLPATH
#
set ebprefix               [concat "/users/apps/" $::env(HOSTNAME)]
set ebprefix               [regsub {\s} $ebprefix ""]
if { ! [ info exists ::env(EASYBUILD_PREFIX) ] } {
    if { [ file writable $ebprefix ] } {
        setenv EASYBUILD_PREFIX                 $ebprefix
    } else {
        setenv EASYBUILD_PREFIX                 $::env(HOME)/easybuild/$system
    }
} else {
    setenv EASYBUILD_PREFIX                     $::env(EASYBUILD_PREFIX)
}
setenv EASYBUILD_INSTALLPATH                    $::env(EASYBUILD_PREFIX)
#
# If not set, EASYBUILD_BUILDPATH and EASYBUILD_TMPDIR will point to /dev/shm/$USER/easbuild/stage
#
if { ! [ info exists ::env(EASYBUILD_TMPDIR) ] } {
    setenv EASYBUILD_TMPDIR                      /tmp/$::env(USER)/easybuild/stage/tmp
} else {
    setenv EASYBUILD_TMPDIR                      $::env(EASYBUILD_TMPDIR)
}
if { ! [ info exists ::env(EASYBUILD_BUILDPATH) ] } {
    setenv EASYBUILD_BUILDPATH                   /tmp/$::env(USER)/easybuild/stage/build
} else {
    setenv EASYBUILD_BUILDPATH                   $::env(EASYBUILD_BUILDPATH)
}
#
# If not set, define EASYBUILD_SOURCEPATH
#
if { ! [ info exists ::env(EASYBUILD_SOURCEPATH) ] } {
    if { [ file writable "/users/apps/sources" ] } {
        setenv EASYBUILD_SOURCEPATH             /users/apps/sources
    } else {
        setenv EASYBUILD_SOURCEPATH             $::env(HOME)/sources
    }
} else {
    setenv EASYBUILD_SOURCEPATH                 $::env(EASYBUILD_SOURCEPATH)
}

###############
# FINAL TOUCH #
###############
# Adding easybuild installed software to the list of modules
#prepend-path MODULEPATH                         $::env(EASYBUILD_INSTALLPATH)/modules/all
# Loading easybuild module
module load $ebmodule
